name: pipeline
on: [push, workflow_dispatch]
permissions:
  contents: write
jobs:
  quality-gates:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: install dependencies
        run: npm install
      - name: testing
        run: npm run test
      - name: code style
        run: npm run prettier:check && npm run lint
  version:
    needs: quality-gates
    if: github.ref_name == 'master'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: add git artifacts
        run: |
          git config --global user.email "njkznu@gmail.com"
          git config --global user.name "kuzanatoliy"
      - name: add minor version
        if: github.event_name == 'push'
        run: npm version minor
      - name: major tag
        if: github.event_name == 'workflow_dispatch'
        run: npm version major
      - name: publis version
        run: |
          git push
          git push --tags
  deploy:
    needs: [quality-gates, version]
    if: github.ref_name == 'master'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: add git artifacts
        run: |
          git config --global user.email "njkznu@gmail.com"
          git config --global user.name "kuzanatoliy"
      - name: install dependencies
        run: npm install
      - name: build
        run: |
          export NODE_OPTIONS=--no-experimental-require-module
          npm run build -- --base sudoku
          npm run build-storybook
          mv ./storybook-static ./dist
      - name: deploy
        run: |
          echo >> dist/.nojekyll
          git add -f dist
          git commit -am "deploy to gh-pages"
          git push origin `git subtree split --prefix dist`:refs/heads/gh-pages --force
          git reset --hard HEAD~1
