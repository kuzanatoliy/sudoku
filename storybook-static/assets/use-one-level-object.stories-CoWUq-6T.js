import{e as O,l as f,i as l,t as o}from"./web-Db2XvEIl.js";const m=r=>{if(r&&typeof r=="object"){const s=[{prefix:"",value:r}],t={};for(;s.length;){const e=s.pop();Object.keys(e.value).forEach(a=>{e.value[a]&&typeof e.value[a]=="object"?s.push({prefix:`${e.prefix}${a}.`,value:e.value[a]}):t[`${e.prefix}${a}`]=e.value[a]})}return t}else return r},d=r=>{const[s,t]=O("");return f(()=>{t(m(r.object))}),s};var g=o("<br>"),v=o("<strong>Original:"),c=o("<p><code>"),b=o("<strong>Transformed:");const j="string",_={test1:"test1",test2:"test2",deep:{test3:"test3",test4:"test4"}},$=["test1","test2",["test3","test4"]],y={title:"hooks/useOneLevelObject",component:r=>{const s=d(r);return[g(),v(),(()=>{var t=c(),e=t.firstChild;return l(e,()=>JSON.stringify(r.object)),t})(),b(),(()=>{var t=c(),e=t.firstChild;return l(e,()=>JSON.stringify(s())),t})()]},tags:["autodocs"],argTypes:{object:{defaultValue:"String",control:{type:"select"},mapping:{String:j,Object:_,Array:$},options:["String","Object","Array"],description:"Initial play value",table:{type:{summary:"select"},defaultValue:{summary:"String"}}}}},n={};var i,u,p;n.parameters={...n.parameters,docs:{...(i=n.parameters)==null?void 0:i.docs,source:{originalSource:"{}",...(p=(u=n.parameters)==null?void 0:u.docs)==null?void 0:p.source}}};const I=["UseOneLevelObject"];export{n as UseOneLevelObject,I as __namedExportsOrder,y as default};
